<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>程序员小栈</title>
    <link>https://www.coderstack.site/</link>
    <description>Recent content on 程序员小栈</description>
    <generator>Hugo -- 0.127.0</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 13 Jun 2024 18:03:31 +0800</lastBuildDate>
    <atom:link href="https://www.coderstack.site/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hooks: useEffect</title>
      <link>https://www.coderstack.site/post/react/useeffect/</link>
      <pubDate>Thu, 13 Jun 2024 18:03:31 +0800</pubDate>
      <guid>https://www.coderstack.site/post/react/useeffect/</guid>
      <description></description>
    </item>
    <item>
      <title>LangChain: Prompts</title>
      <link>https://www.coderstack.site/post/langchain/prompts/</link>
      <pubDate>Thu, 13 Jun 2024 10:06:21 +0800</pubDate>
      <guid>https://www.coderstack.site/post/langchain/prompts/</guid>
      <description>LangChain 系列的文章，使用的 Python 版本为 3.11.4，LangChain 版本为 v0.2
API 可能会有变动，请以官方文档为准
优秀的提示词： 【立角色】：引导 AI 进入具体场景，赋予其行家身份 【述问题】：告诉 AI 你的困惑和问题，以及背景信息 【定目标】：告诉 AI 你的需求，希望达成的目标 【补要求】：告诉 AI 回答时注意什么，或者如何回复 不好的提示词：我想去海南玩，请你帮我做一份旅行攻路
好的提示词：假如你是导游，我要到海南游玩，预算一万元，旅行人数三个人，行程7天，请称我做一份旅行政略，请注量：我不喜欢行程太紧凑，我不喜欢网红景点，更喜欢有文化底蕴的景点，另外，推荐景点请附上各个景点的价格
提示词模版： 将提示词提炼成模板 实现提示词的复用、版本管理、动态变化等 以上面的好的提示词举例：
假如你是导游，我要到 {place} 游玩，预算 {budget}，旅行人数 {numberofpeople} 个人，行程 {numberofdays} 天，请称我做一份旅行政略，请注量：我不喜欢 {dontlike}，更喜欢 {like}，另外，{additional}。
将一条固定的提示词，进行提炼，来实现提示词的复用，即为提示词模版。像极了一个函数，传入所需要的参数，返回一定内容， y = f(x1, x2, ...)
Prompt Templates 提示此模版 字符串模版 PromptTemplate from langchain.prompts import PromptTemplate prompt_template = PromptTemplate.from_template(&amp;#34;你是一位起名大师，帮我起{number}个具有{country}特色的{sex}名字&amp;#34;) prompt_template.format(number=1, country=&amp;#39;中国&amp;#39;, sex=&amp;#39;女孩&amp;#39;) 很像 JS 中的模版字符串，对吧 🤔
对话模版 ChatPromptTemplate from langchain_core.prompts import ChatPromptTemplate chat_template = ChatPromptTemplate.</description>
    </item>
    <item>
      <title>前端常见面试题：CSS篇</title>
      <link>https://www.coderstack.site/post/interview/frontend-interview-china-css/</link>
      <pubDate>Thu, 13 Jun 2024 01:40:07 +0800</pubDate>
      <guid>https://www.coderstack.site/post/interview/frontend-interview-china-css/</guid>
      <description> 争取做到一篇文章，解决前端面试问题
文章中提到的面试考察频率，仅代表本人参加 2024 届秋招过程中所遇到的情况
考察频率仅有三种情况：
🟢 频率：很高
🟠 频率：适中
🔴 频率：较少
CSS JavaScript 框架 React 聊一聊 React 的事件机制 Vue </description>
    </item>
    <item>
      <title>前端常见面试题：HTML篇</title>
      <link>https://www.coderstack.site/post/interview/frontend-interview-china-html/</link>
      <pubDate>Thu, 13 Jun 2024 01:40:07 +0800</pubDate>
      <guid>https://www.coderstack.site/post/interview/frontend-interview-china-html/</guid>
      <description>争取做到一篇文章，解决前端面试问题
文章中提到的面试考察频率，仅代表本人参加 2024 届秋招过程中所遇到的情况
考察频率仅有三种情况：
🟢 频率：很高
🟠 频率：适中
🔴 频率：较少
HTML 对 HTML 语义化的理解 🟠 频率：适中
HTML 语义化是指在编写 HTML 文档时，使用恰当的标签，以及正确的结构来描述文档的内容、结构和意义。比如 header 就是放一些头部的标签，footer 就是放一些底部的标签。这么做有几点好处：
对机器友好，更适合搜索引擎的爬虫爬取有效信息，有利于 SEO。 对开发者友好，使用语义类标签增强了可读性，结构更加清晰，开发者能清晰地看出网页的结构，便于开发与维护。 SEO(Search Engine Optimization): 搜索引擎优化，为了让用户在搜索和网站相关的关键词的时候，可以使网站在搜索引擎的排名尽量靠前，从而增加流量。
常见的语义化标签有哪些 🔴 频率：较少
&amp;lt;header&amp;gt; 头部 &amp;lt;nav&amp;gt; 导航栏 &amp;lt;article&amp;gt; 主要内容 &amp;lt;aside&amp;gt; 侧边栏 &amp;lt;footer&amp;gt; 底部 该图片选自 菜鸟教程
行内元素、块级元素、行内块元素的的特点？分别有哪些 🟠 频率：适中
行内元素：
一行可以显示多个 不可以设置宽高 宽度和高度默认由内容撑开 padding 左右可以设置，上下设置不占位 （浏览器中可以去验证一下） margin 左右可以设置，上下设置不生效 （浏览器中可以去验证一下） 行内元素有 span a b i 等等 块级元素：
独占一行 可以设置宽高 宽度默认是父元素的宽度（父元素宽度 100%），高度默认由内容撑开 margin、padding 上下左右都有效 块级元素有 h1-h6 div p 等等 行内块元素：</description>
    </item>
    <item>
      <title>Github 配置 SSH</title>
      <link>https://www.coderstack.site/post/knowledge/config-ssh-github/</link>
      <pubDate>Thu, 13 Jun 2024 00:26:04 +0800</pubDate>
      <guid>https://www.coderstack.site/post/knowledge/config-ssh-github/</guid>
      <description>1. 检查你的电脑是否已经存在 SSH key ls -al ~/.ssh 如果存在，会显示 id_rsa 和 id_rsa.pub 两个文件，跳到第三步骤
2. 生成新的 SSH key 指令中的 your_email@example.com 部分，替换为你注册 GitHub 时的邮箱 https://github.com/settings/emails
ssh-keygen -t ed25519 -C &amp;#34;your_email@example.com&amp;#34; 出现的提示一路回车即可
3. 添加新的 SSH key 到 Github 执行以下命令，并复制输出结果
cat ~/.ssh/id_ed25519.pub 访问 https://github.com/settings/keys，点击下图所示。
将刚才复制的输出结果，进行粘贴。
4. 测试是否成功 ssh -T git@github.com 完成 🎉 </description>
    </item>
    <item>
      <title>安装 Homebrew</title>
      <link>https://www.coderstack.site/post/macos/install-homebrew/</link>
      <pubDate>Wed, 12 Jun 2024 23:25:00 +0800</pubDate>
      <guid>https://www.coderstack.site/post/macos/install-homebrew/</guid>
      <description>前提 电脑中已安装 Git
（新电脑到手/重装新系统后，强烈建议，首先去执行一次 xcode-select --install，即可安装一些基本的开发工具，如 Git）
无科学上网 国内同学直接使用 Homebrew 官方的脚本，无科学上网，基本不可能一次安装成功
使用国内镜像，可以参考 https://gitee.com/cunkai/HomebrewCN
科学上网 Homebrew 官方链接 https://brew.sh/
开启 TUN 模式，使得终端这类软件也同样走代理。只要梯子稳定，即可通过官网脚本一次安装成功</description>
    </item>
  </channel>
</rss>
